// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox renders correctly 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <input
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id="testing"
      name="testing"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for="testing"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly checked 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="true"
    data-error="false"
  >
    <input
      aria-invalid="false"
      checked=""
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":r4:"
      name=":r4:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r4:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly checked and disabled 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="true"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="true"
    data-error="false"
  >
    <input
      aria-invalid="false"
      checked=""
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      disabled=""
      id=":r6:"
      name=":r6:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r6:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly disabled 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="true"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <input
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      disabled=""
      id=":r2:"
      name=":r2:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r2:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly indeterminate 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="indeterminate"
    data-error="false"
  >
    <input
      aria-checked="mixed"
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":r5:"
      name=":r5:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r5:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly indeterminate and disabled 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="true"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="indeterminate"
    data-error="false"
  >
    <input
      aria-checked="mixed"
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      disabled=""
      id=":r7:"
      name=":r7:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r7:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly invisible 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
    data-visibility="true"
  >
    <input
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":r8:"
      name=":r8:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r8:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly no child 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <input
      aria-invalid="false"
      aria-label="check"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":r1:"
      name=":r1:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly required 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

.cache-1df1xfu-StyledIcon-sizeStyles {
  vertical-align: middle;
  fill: #a6102d;
  height: 10px;
  width: 10px;
  min-width: 10px;
  min-height: 10px;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <input
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":r3:"
      name=":r3:"
      required=""
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r3:"
    >
      Checkbox Label
    </label>
    <sup>
      <svg
        class="cache-1df1xfu-StyledIcon-sizeStyles e5nqbfp0"
        viewBox="0 0 24 24"
      >
        <path
          d="M10,2H14L13.21,9.91L19.66,5.27L21.66,8.73L14.42,12L21.66,15.27L19.66,18.73L13.21,14.09L14,22H10L10.79,14.09L4.34,18.73L2.34,15.27L9.58,12L2.34,8.73L4.34,5.27L10.79,9.91L10,2Z"
        />
      </svg>
    </sup>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly with a value 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <input
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":rd:"
      name=":rd:"
      type="checkbox"
      value="test"
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":rd:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly with an error 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="true"
  >
    <input
      aria-describedby=":r9:-hint"
      aria-invalid="true"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":r9:"
      name=":r9:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":r9:"
    >
      Checkbox Label
    </label>
  </div>
  .cache-1l9l4mf-StyledText-PaddedText {
  color: #a6102d;
  font-size: 14px;
  font-family: Asap;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 20px;
  text-transform: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0 4px;
}

<p
    class="eqr7bqq4 cache-1l9l4mf-StyledText-PaddedText e13y3mga0"
  >
    test error
  </p>
</DocumentFragment>
`;

exports[`Checkbox renders correctly with indeterminate state 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-1lcemq7-StyledIcon {
  border-radius: 4px;
  height: 24px;
  width: 24px;
  min-width: 24px;
  min-height: 24px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="indeterminate"
    data-error="false"
  >
    <input
      aria-checked="mixed"
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":rg:"
      name=":rg:"
      type="checkbox"
      value=""
    />
    <svg
      class="cache-1lcemq7-StyledIcon eqr7bqq3"
      size="24"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":rg:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly with progress 1`] = `
<DocumentFragment>
  @keyframes animation-0 {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-euwc5b-StyledActivityContainer {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.cache-gqzzce-Loader {
  -webkit-animation: animation-0 0.75s linear infinite;
  animation: animation-0 0.75s linear infinite;
}

.cache-11f05l0-Loader {
  -webkit-transition: stroke-dashoffset 0.5s ease 0s;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <div
      class="cache-euwc5b-StyledActivityContainer eqr7bqq0"
    >
      <svg
        aria-label="Loading"
        aria-valuemax="100"
        aria-valuemin="0"
        aria-valuenow="20"
        aria-valuetext="20%"
        class="cache-gqzzce-Loader"
        role="progressbar"
        style="height: 24px; width: 24px;"
        viewBox="0 0 100 100"
      >
        <circle
          cx="50"
          cy="50"
          fill="none"
          r="42"
          stroke="#d4dae7"
          stroke-width="16"
        />
        <circle
          class="cache-11f05l0-Loader"
          cx="50"
          cy="50"
          fill="none"
          r="42"
          stroke="#4f0599"
          stroke-dasharray="263.89378290154264"
          stroke-dashoffset="211.11502632123413"
          stroke-linecap="round"
          stroke-width="16"
        />
      </svg>
    </div>
    <input
      aria-invalid="false"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":rb:"
      name=":rb:"
      type="checkbox"
      value=""
    />
    <label
      for=":rb:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly with progress and no child 1`] = `
<DocumentFragment>
  @keyframes animation-0 {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-euwc5b-StyledActivityContainer {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.cache-gqzzce-Loader {
  -webkit-animation: animation-0 0.75s linear infinite;
  animation: animation-0 0.75s linear infinite;
}

.cache-11f05l0-Loader {
  -webkit-transition: stroke-dashoffset 0.5s ease 0s;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.cache-1tc172q-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 24px;
  width: 24px;
  opacity: 0;
  border-width: 0;
}

.cache-1tc172q-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-1tc172q-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-1tc172q-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1tc172q-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1tc172q-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <div
      class="cache-euwc5b-StyledActivityContainer eqr7bqq0"
    >
      <svg
        aria-label="Loading"
        aria-valuemax="100"
        aria-valuemin="0"
        aria-valuenow="20"
        aria-valuetext="20%"
        class="cache-gqzzce-Loader"
        role="progressbar"
        style="height: 24px; width: 24px;"
        viewBox="0 0 100 100"
      >
        <circle
          cx="50"
          cy="50"
          fill="none"
          r="42"
          stroke="#d4dae7"
          stroke-width="16"
        />
        <circle
          class="cache-11f05l0-Loader"
          cx="50"
          cy="50"
          fill="none"
          r="42"
          stroke="#4f0599"
          stroke-dasharray="263.89378290154264"
          stroke-dashoffset="211.11502632123413"
          stroke-linecap="round"
          stroke-width="16"
        />
      </svg>
    </div>
    <input
      aria-invalid="false"
      aria-label="check"
      class="cache-1tc172q-CheckboxInput eqr7bqq2"
      id=":rc:"
      name=":rc:"
      type="checkbox"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`Checkbox renders correctly with sizes 1`] = `
<DocumentFragment>
  .cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-18luza1-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 37px;
  width: 37px;
  opacity: 0;
  border-width: 0;
}

.cache-18luza1-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-18luza1-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-18luza1-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-18luza1-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-18luza1-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-18luza1-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-18luza1-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-18luza1-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-mu6xj5-StyledIcon {
  border-radius: 4px;
  height: 37px;
  width: 37px;
  min-width: 37px;
  min-height: 37px;
}

.cache-uzcbt1-InnerCheckbox {
  fill: #ffffff;
  stroke: #b2b6c3;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <input
      aria-invalid="false"
      class="cache-18luza1-CheckboxInput eqr7bqq2"
      id=":re:"
      name=":re:"
      type="checkbox"
      value="test"
    />
    <svg
      class="cache-mu6xj5-StyledIcon eqr7bqq3"
      size="37"
      viewBox="0 0 24 24"
    >
      <g>
        <rect
          class="cache-uzcbt1-InnerCheckbox eqr7bqq7"
          height="14"
          rx="2px"
          stroke-width="2"
          width="14"
          x="5"
          y="5"
        />
        <rect
          class="cache-1nkq693-CheckMixedMark eqr7bqq5"
          height="2"
          rx="1"
          width="8"
          x="8"
          y="11"
        />
        <rect
          class="cache-1nu9t2r-CheckMark eqr7bqq6"
          height="8"
          rx="1"
          width="8"
          x="8"
          y="8"
        />
      </g>
    </svg>
    <label
      for=":re:"
    >
      Checkbox Label
    </label>
  </div>
  @keyframes animation-0 {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.cache-1ghub5n-CheckboxContainer {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='false'],
.cache-1ghub5n-CheckboxContainer[aria-disabled='false']>label {
  cursor: pointer;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] {
  cursor: not-allowed;
  color: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true']>label {
  cursor: not-allowed;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 {
  fill: #c4c9d6;
}

.cache-1ghub5n-CheckboxContainer[aria-disabled='true'] .eqr7bqq3 .eqr7bqq7 {
  stroke: #c4c9d6;
  fill: #f6f6f8;
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq6,
.cache-1ghub5n-CheckboxContainer .eqr7bqq5 {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2:checked+.eqr7bqq3 .eqr7bqq6 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer .eqr7bqq2[aria-checked="mixed"]+.eqr7bqq3 .eqr7bqq5 {
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-1ghub5n-CheckboxContainer:hover[aria-disabled='false'] .eqr7bqq2[aria-invalid="true"]+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

.cache-euwc5b-StyledActivityContainer {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.cache-gqzzce-Loader {
  -webkit-animation: animation-0 0.75s linear infinite;
  animation: animation-0 0.75s linear infinite;
}

.cache-11f05l0-Loader {
  -webkit-transition: stroke-dashoffset 0.5s ease 0s;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.cache-18luza1-CheckboxInput {
  position: absolute;
  white-space: nowrap;
  height: 37px;
  width: 37px;
  opacity: 0;
  border-width: 0;
}

.cache-18luza1-CheckboxInput:not(:disabled) {
  cursor: pointer;
}

.cache-18luza1-CheckboxInput:disabled {
  cursor: not-allowed;
}

.cache-18luza1-CheckboxInput:not(:disabled):checked+.eqr7bqq3,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 {
  fill: #4f0599;
}

.cache-18luza1-CheckboxInput:not(:disabled):checked+.eqr7bqq3 .eqr7bqq7,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-checked='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
}

.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 {
  fill: #dd3252;
}

.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='true']+.eqr7bqq3 .eqr7bqq7,
.cache-18luza1-CheckboxInput:not(:disabled)[aria-invalid='mixed']+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
}

.cache-18luza1-CheckboxInput:focus+.eqr7bqq3 {
  background-color: #eeeeff;
  fill: #4f0599;
}

.cache-18luza1-CheckboxInput:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #4f0599;
  fill: #eeeeff;
}

.cache-18luza1-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 {
  background-color: #ffe1e7;
  fill: #dd3252;
}

.cache-18luza1-CheckboxInput[aria-invalid='true']:focus+.eqr7bqq3 .eqr7bqq7 {
  stroke: #dd3252;
  fill: #ffe1e7;
}

<div
    aria-disabled="false"
    class="cache-1ghub5n-CheckboxContainer eqr7bqq1"
    data-checked="false"
    data-error="false"
  >
    <div
      class="cache-euwc5b-StyledActivityContainer eqr7bqq0"
    >
      <svg
        aria-label="Loading"
        aria-valuemax="100"
        aria-valuemin="0"
        aria-valuenow="20"
        aria-valuetext="20%"
        class="cache-gqzzce-Loader"
        role="progressbar"
        style="height: 37px; width: 37px;"
        viewBox="0 0 100 100"
      >
        <circle
          cx="50"
          cy="50"
          fill="none"
          r="42"
          stroke="#d4dae7"
          stroke-width="16"
        />
        <circle
          class="cache-11f05l0-Loader"
          cx="50"
          cy="50"
          fill="none"
          r="42"
          stroke="#4f0599"
          stroke-dasharray="263.89378290154264"
          stroke-dashoffset="211.11502632123413"
          stroke-linecap="round"
          stroke-width="16"
        />
      </svg>
    </div>
    <input
      aria-invalid="false"
      class="cache-18luza1-CheckboxInput eqr7bqq2"
      id=":rf:"
      name=":rf:"
      type="checkbox"
      value="test"
    />
    <label
      for=":rf:"
    >
      Checkbox Label
    </label>
  </div>
</DocumentFragment>
`;
